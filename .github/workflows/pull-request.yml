name: Pull Request Tests

on:
  pull_request:
    branches:
      - master

permissions:
  pull-requests: write
  contents: write

jobs:
  tests-packaging:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - uses: pre-commit/action@v3.0.0
    - name: setup fuse
      run: |
        sudo apt-get update --fix-missing
        sudo apt-get install -y -f -o Acquire::Retries=3 libfuse2
    - name: Package bdist
      run: make build
    - name: Package AppImage
      run: |
        cd pkg && make osc-cli-x86_64.AppImage
        ./osc-cli-x86_64.AppImage 2>&1 | grep Usage
        cd pkg && make clean
        cd pkg && make ./configure --py3_ver=11 --arch_old=2014 && make osc-cli-x86_64.AppImage
        ./osc-cli-x86_64.AppImage 2>&1 | grep Usage
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: osc-cli
        path: |
          dist/osc_sdk-*.whl
          dist/osc-sdk-*.tar.gz
          pkg/osc-cli-x86_64.AppImage
          pkg/osc-cli-x86_64.zip
  tests-app:
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: pre-commit/action@v2.0.3
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.version }}
    - name: Install dependencies
      run: make .venv/ok
    - name: Analysing the code with pylint
      run: make test-pylint
    - name: Security check - Bandit
      run: make test-bandit
    - name: Test typing - mypy
      run: make test-mypy
    - name: Test pytest
      run: make test-pytest
      env:
        OSC_TEST_ACCESS_KEY: ${{ secrets.OSC_TEST_ACCESS_KEY }}
        OSC_TEST_SECRET_KEY: ${{ secrets.OSC_TEST_SECRET_KEY }}
        OSC_TEST_ENDPOINT_ICU: ${{ secrets.OSC_TEST_ENDPOINT_ICU }}
        OSC_TEST_ENDPOINT_API: ${{ secrets.OSC_TEST_ENDPOINT_API }}
        OSC_TEST_ENDPOINT_FCU: ${{ secrets.OSC_TEST_ENDPOINT_FCU }}
        OSC_TEST_REGION: ${{ secrets.OSC_TEST_REGION }}
    - name: Integration tests
      run: make test-int
      env:
        OSC_TEST_ACCESS_KEY: ${{ secrets.OSC_TEST_ACCESS_KEY }}
        OSC_TEST_SECRET_KEY: ${{ secrets.OSC_TEST_SECRET_KEY }}
        OSC_TEST_LOGIN: ${{ secrets.OSC_TEST_LOGIN }}
        OSC_TEST_PASSWORD: ${{ secrets.OSC_TEST_PASSWORD }}
        OSC_TEST_REGION: ${{ secrets.OSC_TEST_REGION }}
    - name: Test python package building
      run: make build
  dependabot-auto-merge:
    needs: [tests-packaging, tests-app]
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Auto-merge
        run: gh pr merge --auto --rebase "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
